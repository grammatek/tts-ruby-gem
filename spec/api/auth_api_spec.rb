=begin
#TTS API

#This API gives access to Grammatek ehf advanced text to speech services. It provides endpoints to query all available voices and synthesize speech from given text for a particular voice. You can synthesize speech in several audio formats and different sample rates. Please authenticate with your client credentials via the /auth/v1 endpoint to receive a temporary access token for all API endpoints. This token is valid only for a certain time and you need to re-authenticate after it has expired. Please contact Grammatek via info@grammatek.com to receive your individual client credentials. 

The version of the OpenAPI document: v1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.1.0

=end

require 'spec_helper'
require 'json'

# Unit tests for GTTS::AuthApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AuthApi' do
  before do
    # run before each test
    @api_instance = GTTS::AuthApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AuthApi' do
    it 'should create an instance of AuthApi' do
      expect(@api_instance).to be_instance_of(GTTS::AuthApi)
    end
  end

  # unit tests for get_token_info
  # Get token info and expiration time
  # Retrieve the absolute date/expiration time of the given access token. If the given token is valid, a 200 response is returned with the expiration date/time of the token. If the token is invalid, a 401 response is returned. Providing the access token as Bearer token in the Authorization header is required. 
  # @param [Hash] opts the optional parameters
  # @return [TokenInfoResponse]
  describe 'get_token_info test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_auth
  # Authenticate and receive access token
  # Authenticate with &#x60;client_id&#x60; and &#x60;client_secret&#x60; to receive a temporary access token. The response is a JSON object with 2 entries: &#x60;access_token&#x60; and &#x60;expires_in&#x60;. The former provides the access token itself, the latter is the expiration time in seconds of the returned token after which it is invalidated and can no longer be used. You need to provide a valid access token as Bearer token in the Authorization header for all other API endpoints. If you encounter a 401 error in one of the other endpoints, your access token has expired and you need to re-authenticate. You can use the endpoint /auth/v1/token-info to check the absolute expiration date/time of the returned access token for e.g. caching purposes. 
  # @param auth_request 
  # @param [Hash] opts the optional parameters
  # @return [AuthResponse]
  describe 'post_auth test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
