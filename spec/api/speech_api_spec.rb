=begin
#TTS API

#This API gives access to Grammatek ehf advanced text to speech services. It provides endpoints to query all available voices and synthesize speech from given text for a particular voice. You can synthesize speech in several audio formats and different sample rates. Please authenticate with your client credentials via the /auth/v1 endpoint to receive a temporary access token for all API endpoints. This token is valid only for a certain time and you need to re-authenticate after it has expired. Please contact Grammatek via info@grammatek.com to receive your individual client credentials. 

The version of the OpenAPI document: v1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.1.0

=end

require 'spec_helper'
require 'json'

# Unit tests for GTTS::SpeechApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SpeechApi' do
  before do
    # run before each test
    @api_instance = GTTS::SpeechApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SpeechApi' do
    it 'should create an instance of SpeechApi' do
      expect(@api_instance).to be_instance_of(GTTS::SpeechApi)
    end
  end

  # unit tests for get_voices
  # Describe/query available voices
  # Describe/query available voices. Providing the access token as Bearer token in the Authorization header is required. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :engine Specify which engine to use
  # @option opts [String] :language_code The language identification tag (ISO 639 code for the language name-ISO 3166 country code) for filtering the list of voices returned. If you don&#39;t specify this optional parameter, all available voices are returned.  example: is-IS
  # @return [Array<Voice>]
  describe 'get_voices test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for post_speech
  # TTS - Synthesize speech from text
  # TTS - Synthesize speech from text. Please provide the following required parameters:    - OutputFormat (mp3, ogg_vorbis, pcm, json)   - Text (input text to synthesize)   - VoiceId (voice ID to use for the synthesis)  You can also provide the following optional parameters:    - SampleRate (audio frequency in Hz, supported values: 8000, 16000, 22050)   - SpeechMarkTypes (type of speech marks to return, supported values: word)   - Engine (engine to use, currently only va√∂ue &#39;standard&#39; is supported)   - LanguageCode (language code to use, only &#39;is-IS&#39; is supported)   - TextType (type of input text, supported values: &#39;text&#39;, &#39;ssml&#39;)   - LexiconNames (list of lexicon names to use, currently this is not supported)  If TextType &#39;ssml&#39; is provided: we only support a subset of tags. Please contact us for more information.  In case the chosen output format is json, the speech marks are returned in the response body as JSON. No audio is returned in that case. Therefore, if you need the audio, you need to make a second request with the same parameters but a different output format.  Providing the access token as Bearer token in the Authorization header is required. 
  # @param [Hash] opts the optional parameters
  # @option opts [SynthesizeSpeechRequest] :synthesize_speech_request 
  # @return [Object]
  describe 'post_speech test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
