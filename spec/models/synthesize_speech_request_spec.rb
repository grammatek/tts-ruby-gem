=begin
#TTS API

#This API gives access to Grammatek ehf advanced text to speech services. It provides endpoints to query all available voices and synthesize speech from given text for a particular voice. You can synthesize speech in several audio formats and different sample rates. Please authenticate with your client credentials via the /auth/v1 endpoint to receive a temporary access token for all API endpoints. This token is valid only for a certain time and you need to re-authenticate after it has expired. Please contact Grammatek via info@grammatek.com to receive your individual client credentials. 

The version of the OpenAPI document: v1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.1.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for GTTS::SynthesizeSpeechRequest
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe GTTS::SynthesizeSpeechRequest do
  let(:instance) { GTTS::SynthesizeSpeechRequest.new }

  describe 'test an instance of SynthesizeSpeechRequest' do
    it 'should create an instance of SynthesizeSpeechRequest' do
      # uncomment below to test the instance creation
      #expect(instance).to be_instance_of(GTTS::SynthesizeSpeechRequest)
    end
  end

  describe 'test attribute "engine"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["standard"])
      # validator.allowable_values.each do |value|
      #   expect { instance.engine = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "language_code"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "lexicon_names"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "output_format"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["json", "pcm", "mp3", "ogg_vorbis"])
      # validator.allowable_values.each do |value|
      #   expect { instance.output_format = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "sample_rate"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["8000", "16000", "22050"])
      # validator.allowable_values.each do |value|
      #   expect { instance.sample_rate = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "speech_mark_types"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["word"])
      # validator.allowable_values.each do |value|
      #   expect { instance.speech_mark_types = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "text"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "text_type"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["text", "ssml"])
      # validator.allowable_values.each do |value|
      #   expect { instance.text_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "voice_id"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
